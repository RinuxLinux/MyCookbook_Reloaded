CODES COULEURS TERMINAL (SGR CODES)
-----------------------------------

cf excel

030-037 : fg colours (normal)
040-047 : bg colours (normal)
090-097 : foreground colours (high intensity) (aixtrem, not standard) (=text)
100-107 : background colours (high intensity) (aixtrem, not standard)

FG	BG	COULEUR	type1		type0
0   -   Reset all attributes to default
39  49  Reset colors to default (not always supported)

30	40	black		normal
31	41	red			normal
32	42	green		normal
33	43	yellow		normal
34	44	blue		normal
35	45	magenta		normal
36	46	cyan		normal
37	47	white		normal

90	100	black				high intensity
91	101	red					high intensity
92	102	green	(flashy)	high intensity
93	103	yellow	(flashy)	high intensity
94	104	blue	(pastel)	high intensity
95	105	magenta	(pastel)	high intensity
96	106	cyan	(turquoise)	high intensity
97	107	grey white			high intensity


---------
NOTATIONS
---------
ESC[30;47m]
echo -e "\\033[30;47m black letters on white bg \\033[0m"


------------
EXPLICATIONS
------------
source: Wikipédia/ANSI_escape_code#COLORS

The original specification only had 8 colors, and just gave them names. 
The SGR parameter 30-37 selected the FOREGROUND color while 40-47 selected the BACKGROUND.
BOLD is implemented in some terminal (SGR code 1) as a BRIGHTER color rather than a different font, thus providing 8 ADDITIONAL FOREGROUND colors.
Usually you could not get these as BACKGROUND colors, though sometimes INVERSE VIDEO (SGR code 7) would allow that.

WHY ENCLOSURES ? \[ \]
The purpose is to tell to the shell that the enclosed sequence does not count toward the character length of the prompt. If that count is wrong, weird things will happen when you scroll back through history, etc : excess length will appear on same line, no backspace. More info in `man bash` under prompting.


--------
RECETTES
--------
echo -e "\\033[30;47m BLACK letters on WHITE bg..\\033[0m"
echo -e "\\033[31m    RED letters................\\033[0m"
echo -e "\\033[31;1m  BRIGHT/BOLD RED letter.....\\033[0m"

PS1 cygwin64 
\[\e]0;\w\a\]\n\[\e[32m\]\u@\h \[\e[33m\]\w\[\e[0m\]\n\$

PS1 debian
(tty no.)user@host:$PWD [$?]$ ...
PS1_user="(\l)\033[1;97;104m\]\u@\h\033[0m\]:\033[1;94m\]\w\033[0m\] [$?]\$ "
PS1_root="(\l)\033[1;97;101m\]\u@\h\033[0m\]:\033[1;91m\]\w\033[0m\] [$?]\$ "

echo -e "(1)\033[1;97;101mroot@host\033[0m:\033[1;91m$PWD [$?]\$\033[0m "


------------
EXEMPLES PS1 (see `man bash` under PROMPTING)
------------
  \a     an ASCII bell character (07)
  \d     the  date  in "Weekday Month Date" format (e.g., "Tue May
		 26")
  \D{format}
		 the format is passed to strftime(3)  and  the  result  is
		 inserted  into the prompt string; an empty format results
		 in a locale-specific time representation.  The braces are
		 required
  \e     an ASCII escape character (033)
  \h     the hostname up to the first `.'
  \H     the hostname
  \j     the number of jobs currently managed by the shell
  \l     the basename of the shell's terminal device name
  \n     newline
  \r     carriage return
  \s     the  name  of  the shell, the basename of $0 (the portion
		 following the final slash)
  \t     the current time in 24-hour HH:MM:SS format
  \T     the current time in 12-hour HH:MM:SS format
  \@     the current time in 12-hour am/pm format
  \A     the current time in 24-hour HH:MM format
  \u     the username of the current user
  \v     the version of bash (e.g., 2.00)
  \V     the release of bash, version + patch level (e.g., 2.00.0)
  \w     the current working  directory,  with  $HOME  abbreviated
		 with  a tilde (uses the value of the PROMPT_DIRTRIM vari‐
		 able)
  \W     the basename of the current working directory, with $HOME
		 abbreviated with a tilde
  \!     the history number of this command
  \#     the command number of this command
  \$     if the effective UID is 0, a #, otherwise a $
  \nnn   the character corresponding to the octal number nnn
  \\     a backslash
  \[     begin  a sequence of non-printing characters, which could
		 be used to embed a terminal  control  sequence  into  the
		 prompt
  \]     end a sequence of non-printing characters








---------------------------------------
SCRIPT BASH - AFFICHE EVENTAIL COULEURS
---------------------------------------
#! /bin/bash
# affiche eventail couleurs
color=16;
while [ $color -lt 245 ]; do
	echo -e "$color: \\033[38;5;${color}m HELLO \\033[48;5;${color}m WORLD \\033[0m"
	((color++));
done

---------

SGR CODES	Select Graphic Rendition (SGR) Parameters	Comment	retenir
0	Reset all attributes		x
1	Bold or increased intensity		x
2	Faint or decreased intensity		x
3	Italic	not always supported	x
4	Underline		x
5	Blink (slow)	not always supported	
6	Blink (rapid)	not always supported	
7	Image Negative (Reverse video) : fg <> bg		x
8	Conceal		
9	Crossed-out		x
10	primary (default) font		
11	nth alternate font [11-19]	not always supported	
12	nth alternate font [11-19]	not always supported	
13	nth alternate font [11-19]	not always supported	
14	nth alternate font [11-19]	not always supported	
15	nth alternate font [11-19]	not always supported	
16	nth alternate font [11-19]	not always supported	
17	nth alternate font [11-19]	not always supported	
18	nth alternate font [11-19]	not always supported	
19	nth alternate font [11-19]	not always supported	
20	Fraktur font (=Gothic font)	not always supported	x
21	Bold: OFF or Underline: DOUBLE		
22	Normal color or intensity (neither bold nor faint)		
23	Not italic, not fraktur		
24	Underline: NONE		x
25	Blink: OFF		
26	Reserved		
27	Image Positive		x
28	Reveal (Conceal: OFF)		
29	Not crossed out		x
30	FG black		x
31	FG red		x
32	FG green		x
33	FG yellow		x
34	FG blue		x
35	FG magenta		x
36	FG cyan		x
37	FG white		x
38	1/3 ... Reserved for extended set FOREGROUND color		x
38	2/3 … 5;n where n is color index (0..255)		x
38	3/3 … 2;r;g;b where r,g,b are RED, GREEN, BLUE COLOR CHANNELS (out of 255)		x
38	4/3 … ex: echo -e "\033[38;5;35m test avec 35 \033[0m"		x
39	Default text color		x
40	BG black		x
41	BG red		x
42	BG green		x
43	BG yellow		x
44	BG blue		x
45	BG magenta		x
46	BG cyan		x
47	BG white		x
48	Reserved for extended set BACKGROUND color		x
48	2/3 … 5;n where n is color index (0..255)		x
48	3/3 … 2;r;g;b where r,g,b are RED, GREEN, BLUE COLOR CHANNELS (out of 255)		x
48	4/3 … ex: echo -e "\033[48;5;35m test avec 35 \033[0m"		x
49	Default bg color		x
50	Reserved		
51	Framed	not always supported	x
52	Encircled		x
53	Overlined		x
54	Not framed or encircled		
55	Not overlined		
56	Reserved [56-59]		
57	Reserved [56-59]		
58	Reserved [56-59]		
59	Reserved [56-59]		
60	Ideogram underline or right side line	not always supported	
61	Ideogram double-underline or double line side	not always supported	
62	Ideogram overline or left line side	not always supported	
63	Ideogram double overline or double left line side	not always supported	
64	Ideogram stress marking	not always supported	
65	Ideogram attributes off	not always supported	
